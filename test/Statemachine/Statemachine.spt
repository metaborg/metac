module Statemachine
language MetaC
start symbol Start

test SM_no_states_no_initial [[
	statemachine sm1{
		
	}
]] parse fails

test SM_no_states_with_initial[[
	statemachine sm1 initial = start {
		
	}
]] parse fails

test SM_one_state_with_initial [[
	statemachine sm initial = start {
		state start {
			
		}
	}
]] parse succeeds

test SM_two_states [[
	statemachine sm initial = start {
		state start{
			
		}
		
		state increment{
			
		}
	}
]] parse succeeds

test SM_one_state_in_event_no_parentheses[[
	statemachine sm initial = start{
		in in_event
		state start{
			
		}
	}
]] parse fails

test SM_one_state_in_event[[
	statemachine sm initial = start{
		in in_event()
		state start{
			
		}
	}
]] parse succeeds

test SM_one_state_out_event_no_parentheses[[
	statemachine sm inital = start{
		out out_event
		state start{
			
		}
	}
]] parse fails

test SM_one_state_out_event[[
	statemachine sm initial=start{
		out out_event()
		state start{
			
		}
	}
]] parse succeeds

test SM_one_state_out_event_binding[[
	statemachine sm initial=start{
		out out_event() => funcall
		state start{
			
		}
	}
]] parse succeeds

test SM_one_state_in_event_params[[
	statemachine sm initial = start{
		in in_event(int8 delta)
		state start{
			
		}
	}
]] parse succeeds

test SM_one_state_entry[[
	statemachine sm initial = start{
		state start{
			entry{
				
			}
		}
	}
]] parse succeeds

test SM_one_state_exit[[
	statemachine sm initial = start{
		state start{
			exit{
				
			}
		}
	}
]] parse succeeds

test SM_one_state_entry_exit[[
	statemachine sm initial = start{
		state start{
			entry{
				
			}
			exit{
				
			}
		}
	}
]] parse succeeds

test SM_one_state_one_event_and_trigger[[
	statemachine sm initial = start{
		in reset()
		state start{
			on reset[] -> start
		}
	}
]] parse succeeds