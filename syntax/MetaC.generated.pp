[
   StateMachineInit                         -- KW["sminit"] KW["("] _1 KW[")"] KW[";"],
   StateMachineTrigger                      -- KW["smtrigger"] KW["("] _1 KW[","] _2 KW[")"] KW[";"],
   StateMachineIsInState                    -- KW["smIsInState"] KW["("] _1 KW[","] _2 KW[")"] KW[";"],
   StateMachineSend                         -- KW["send"] _1 KW["("] _2 KW[")"],
   StateMachineSend.2:iter-star-sep         -- _1 KW[","],
   StatemachineType                         -- KW["statemachine"] _1,
   EventRef                                 -- _1 KW["("] _2 KW[")"],
   EventRef.2:iter-star-sep                 -- _1 KW[","],
   COMPLETION-StatemachineExp               -- _1,
   COMPLETION-StatemachineStm               -- _1,
   COMPLETION-Type                          -- _1,
   COMPLETION-EventRef                      -- _1,
   Statemachine                             -- KW["statemachine"] _1 KW["initial"] KW["="] _2 KW["{"] _3 KW["}"],
   Statemachine.3:iter-star                 -- _1,
   StateMachineState                        -- KW["state"] _1 KW["{"] _2 KW["}"],
   StateMachineState.2:iter-star            -- _1,
   StateMachineInEvent                      -- KW["in"] _1 KW["("] _2 KW[")"],
   StateMachineInEvent.2:iter-star-sep      -- _1 KW[","],
   StateMachineOutEvent                     -- KW["out"] _1 KW["("] _2 KW[")"] _3,
   StateMachineOutEvent.2:iter-star-sep     -- _1 KW[","],
   StateMachineOutEvent.3:opt               -- _1,
   StateMachineVarDecl                      -- _1 KW["var"] _2 _3 KW["="] _4,
   StateMachineVarDecl.1:opt                -- _1,
   Binding                                  -- KW["="] KW[">"] _1,
   StateEntry                               -- KW["entry"] _1,
   StateExit                                -- KW["exit"] _1,
   StateTransition                          -- KW["on"] _1 KW["["] _2 KW["]"] KW["-"] KW[">"] _3 _4,
   StateTransition.2:opt                    -- _1,
   StateTransition.4:opt                    -- _1,
   COMPLETION-Statemachine                  -- _1,
   COMPLETION-StateMachineComponent         -- _1,
   COMPLETION-StateMachineEventBinding      -- _1,
   COMPLETION-StateBody                     -- _1,
   COMPLETION-Component                     -- _1,
   COMPLETION-ComponentProvides             -- _1,
   COMPLETION-Init                          -- _1,
   COMPLETION-ComponentContent              -- _1,
   COMPLETION-ComponentFunction             -- _1,
   COMPLETION-Internal                      -- _1,
   COMPLETION-FunctionTrigger               -- _1,
   COMPLETION-Interface                     -- _1,
   COMPLETION-InterfaceContent              -- _1,
   COMPLETION-FunctionProyotypeForInterface -- _1,
   COMPLETION-Query                         -- _1,
   COMPLETION-PreOrPostCondition            -- _1,
   COMPLETION-Precondition                  -- _1,
   COMPLETION-Postcondition                 -- _1,
   Module                                   -- KW["module"] _1 _2 KW["{"] _3 KW["}"],
   Module.2:opt                             -- _1,
   Module.3:iter-star                       -- _1,
   Import                                   -- _1,
   MessageList                              -- _1 KW["messagelist"] _2 KW["{"] _3 KW["}"],
   MessageList.1:opt                        -- _1,
   MessageList.3:iter-star                  -- _1,
   Message                                  -- KW["INFO"] _1 KW["("] _2 KW[")"] _3 KW[":"] _4,
   Message.2:iter-star-sep                  -- _1 KW[","],
   Message                                  -- KW["WARNING"] _1 KW["("] _2 KW[")"] _3 KW[":"] _4,
   Message.2:iter-star-sep                  -- _1 KW[","],
   Message                                  -- KW["ERROR"] _1 KW["("] _2 KW[")"] _3 KW[":"] _4,
   Message.2:iter-star-sep                  -- _1 KW[","],
   MessageActive                            -- KW["active"],
   MessageInactive                          -- KW["inactive"],
   ModuleExternal                           -- KW["external"] KW["module"] _1 _2 KW["{"] _3 KW["}"],
   ModuleExternal.2:opt                     -- _1,
   ModuleExternal.3:iter-star               -- _1,
   Resource                                 -- _1,
   Header                                   -- _1 KW[".h"],
   COMPLETION-ModuleContent                 -- _1,
   COMPLETION-ModuleImports                 -- _1,
   COMPLETION-Import                        -- _1,
   COMPLETION-MessageList                   -- _1,
   COMPLETION-Message                       -- _1,
   COMPLETION-MessageActive                 -- _1,
   COMPLETION-Module                        -- _1,
   COMPLETION-ExternalModuleContent         -- _1,
   COMPLETION-ModuleResources               -- _1,
   COMPLETION-Resource                      -- _1,
   COMPLETION-Header                        -- _1,
   Param                                    -- _1 _2,
   Param                                    -- _1 KW["["] _2 KW["]"],
   Param                                    -- KW["*"] _1,
   ParamList                                -- _1,
   ParamList.1:iter-star-sep                -- _1 KW[","],
   FunDef                                   -- _1 _2 _3 KW["("] _4 KW[")"] KW["{"] _5 KW["}"],
   FunDef.1:opt                             -- _1,
   FunDef.5:iter-star                       -- _1,
   Exported                                 -- KW["exported"],
   FunProto                                 -- _1 _2 KW["("] _3 KW[")"] KW[";"],
   COMPLETION-FunctionParameter             -- _1,
   COMPLETION-ParamList                     -- _1,
   COMPLETION-FunDef                        -- _1,
   COMPLETION-Exported                      -- _1,
   COMPLETION-FunProto                      -- _1,
   NoInit                                   -- _1,
   Init                                     -- _1 KW["="] _2,
   Init                                     -- _1 KW["="] _2,
   InitBlock                                -- KW["{"] _1 KW["}"],
   InitBlock.1:iter-sep                     -- _1 KW[","],
   Declaration                              -- _1 _2 KW[";"],
   StructOrUnionInlineDecl                  -- _1 _2 KW[";"],
   TypedefDecl                              -- KW["typedef"] _1 _2 KW[";"],
   COMPLETION-Decl                          -- _1,
   COMPLETION-Initialization                -- _1,
   COMPLETION-InitBlock                     -- _1,
   COMPLETION-InitializationList            -- _1,
   COMPLETION-Declaration                   -- _1,
   Label                                    -- _1 KW[":"] _2,
   Case                                     -- KW["case"] _1 KW[":"] _2,
   Default                                  -- KW["default"] KW[":"] _1,
   Block                                    -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   Block.1:iter-star                        -- _1,
   Exp                                      -- _1 KW[";"],
   Exp.1:opt                                -- _1,
   If                                       -- KW["if"] KW["("] _1 KW[")"] _2,
   IfElse                                   -- KW["if"] KW["("] _1 KW[")"] _2 KW["else"] _3,
   Switch                                   -- KW["switch"] KW["("] _1 KW[")"] _2,
   While                                    -- KW["while"] KW["("] _1 KW[")"] _2,
   DoWhile                                  -- KW["do"] _1 KW["while"] KW["("] _2 KW[")"],
   For                                      -- KW["for"] KW["("] _1 KW[";"] _2 KW[";"] _3 KW[")"] _4,
   For.1:opt                                -- _1,
   For.2:opt                                -- _1,
   For.3:opt                                -- _1,
   For                                      -- KW["for"] KW["("] _1 _2 KW[";"] _3 KW[")"] _4,
   For.2:opt                                -- _1,
   For.3:opt                                -- _1,
   Goto                                     -- KW["goto"] _1 KW[";"],
   Continue                                 -- KW["continue"] KW[";"],
   Break                                    -- KW["break"] KW[";"],
   Return                                   -- KW["return"] _1 KW[";"],
   Return.1:opt                             -- _1,
   Exit                                     -- KW["exit"] _1 KW[";"],
   Exit.1:opt                               -- _1,
   Report                                   -- KW["report"] _1 KW["."] _2 KW["()"] KW[";"],
   MListRef                                 -- _1,
   COMPLETION-Block                         -- _1,
   COMPLETION-Stm                           -- _1,
   COMPLETION-MListRef                      -- _1,
   FieldDecl                                -- _1 _2 KW[";"],
   FieldDecl.2:iter-star-sep                -- _1 KW[","],
   NestedStruct                             -- _1 _2 KW[";"],
   NestedStruct.2:opt                       -- _1,
   Struct                                   -- _1 KW["struct"] _2 KW["{"] _3 KW["}"],
   Struct.1:opt                             -- _1,
   Struct.2:opt                             -- _1,
   Struct.3:iter-star                       -- _1,
   Union                                    -- _1 KW["union"] _2 KW["{"] _3 KW["}"],
   Union.1:opt                              -- _1,
   Union.2:opt                              -- _1,
   Union.3:iter-star                        -- _1,
   COMPLETION-FieldDecl                     -- _1,
   COMPLETION-StructOrUnion                 -- _1,
   EnumItem                                 -- _1 KW["="] _2,
   EnumItem                                 -- _1,
   Enum                                     -- _1 KW["enum"] _2 KW["{"] _3 KW["}"],
   Enum.1:opt                               -- _1,
   Enum.2:opt                               -- _1,
   Enum.3:iter-sep                          -- _1 KW[","],
   COMPLETION-EnumItem                      -- _1,
   COMPLETION-Enum                          -- _1,
   Var                                      -- _1,
   FunctionCall                             -- _1 KW["("] _2 KW[")"],
   FunctionCall.2:iter-star-sep             -- _1 KW[","],
   ArrayField                               -- _1 KW["["] _2 KW["]"],
   Field                                    -- _1 KW["."] _2,
   FieldViaPointer                          -- _1 KW["-"] KW[">"] _2,
   IncrementPostfix                         -- _1 KW["++"],
   DecrementPostfix                         -- _1 KW["--"],
   IncrementPrefix                          -- KW["++"] _1,
   DecrementPrefix                          -- KW["--"] _1,
   Positive                                 -- KW["+"] _1,
   Negative                                 -- KW["-"] _1,
   Not                                      -- KW["!"] _1,
   BitwiseComplement                        -- KW["~"] _1,
   TypeConversion                           -- KW["("] _1 KW[")"] _2,
   Dereference                              -- KW["*"] _1,
   Address                                  -- KW["&"] _1,
   SizeOf                                   -- KW["sizeof"] _1,
   Multiplication                           -- _1 KW["*"] _2,
   Division                                 -- _1 KW["/"] _2,
   Modulo                                   -- _1 KW["%"] _2,
   Addition                                 -- _1 KW["+"] _2,
   Subtraction                              -- _1 KW["-"] _2,
   BitshiftLeft                             -- _1 KW["<<"] _2,
   BitshiftRight                            -- _1 KW[">>"] _2,
   LessThan                                 -- _1 KW["<"] _2,
   LessThanEqual                            -- _1 KW["<"] KW["="] _2,
   GreaterThan                              -- _1 KW[">"] _2,
   GreaterThanEqual                         -- _1 KW[">"] KW["="] _2,
   Equal                                    -- _1 KW["=="] _2,
   Inequal                                  -- _1 KW["!="] _2,
   BitwiseAnd                               -- _1 KW["&"] _2,
   BitwiseXor                               -- _1 KW["^"] _2,
   BitwiseOr                                -- _1 KW["|"] _2,
   And                                      -- _1 KW["&&"] _2,
   Or                                       -- _1 KW["||"] _2,
   TernaryConditional                       -- _1 KW["?"] _2 KW[":"] _3,
   Assign                                   -- _1 _2 _3,
   Assign                                   -- KW["="],
   PlusAssign                               -- KW["+="],
   MinusAssign                              -- KW["-="],
   MultiplyAssign                           -- KW["*="],
   DivisionAssign                           -- KW["/="],
   ModuloAssign                             -- KW["%="],
   BitwiseAndAssign                         -- KW["&="],
   BitwiseXorAssign                         -- KW["^="],
   BitwiseOrAssign                          -- KW["|="],
   BitshiftLeftAssign                       -- KW["<<"] KW["="],
   BitshiftRightAssign                      -- KW[">>"] KW["="],
   CommaExp                                 -- _1 KW[","] _2,
   COMPLETION-Exp                           -- _1,
   COMPLETION-AssignExp                     -- _1,
   COMPLETION-AssignOp                      -- _1,
   COMPLETION-CommaExp                      -- _1,
   BasicType                                -- _1,
   Array                                    -- _1 KW["["] _2 KW["]"],
   Array.2:opt                              -- _1,
   StructType                               -- KW["struct"] _1,
   UnionType                                -- KW["union"] _1,
   EnumType                                 -- KW["enum"] _1,
   TypeSynonym                              -- _1,
   Type                                     -- _1 _2,
   Type.1:iter-star                         -- _1,
   PointerType                              -- _1 KW["*"] _2,
   PointerType.2:iter-star                  -- _1,
   Static                                   -- KW["static"],
   Const                                    -- KW["const"],
   Volatile                                 -- KW["volatile"],
   COMPLETION-PureType                      -- _1,
   COMPLETION-Type                          -- _1,
   COMPLETION-TypeModifier                  -- _1,
   Decimal                                  -- _1,
   Binary                                   -- _1,
   Octal                                    -- _1,
   Hexadecimal                              -- _1,
   Float                                    -- _1,
   Char                                     -- _1,
   String                                   -- _1,
   COMPLETION-Constant                      -- _1,
   Identifier                               -- _1,
   COMPLETION-Identifier                    -- _1
]